% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_age_length_key.R
\name{generate_age_length_key}
\alias{generate_age_length_key}
\title{Generate Sample Age-Length Key}
\usage{
generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "linear",
  growth_params = NULL,
  cv = 0.3,
  plus_group_age = FALSE
)
}
\arguments{
\item{length_range}{Numeric vector of min and max lengths (e.g., c(20, 40))}

\item{age_range}{Numeric vector of min and max ages (e.g., c(1, 8))}

\item{growth_type}{Character, type of growth relationship: "linear" (default), "vonbert", or "logistic"}

\item{growth_params}{Named list of growth parameters (see details)}

\item{cv}{Numeric, coefficient of variation for age-at-length (default 0.3)}

\item{plus_group_age}{Logical, whether to combine older ages into plus group (default FALSE)}
}
\value{
Data frame with columns:
  \itemize{
    \item \code{length}: Length bin
    \item \code{age}: Age class
    \item \code{proportion}: Proportion of fish of that length in that age class
  }
}
\description{
Creates a sample age-length key for testing and demonstration purposes (NOT to be used for a real world example).
The key uses biological relationships where younger fish are typically
found at smaller lengths.
}
\details{
**Growth type parameters:**

For "linear":
\itemize{
  \item \code{intercept}: Age intercept (default -2)
  \item \code{slope}: Age increase per length unit (default 0.25)
}

For "vonbert" (von Bertalanffy):
\itemize{
  \item \code{linf}: Asymptotic length (default 60)
  \item \code{k}: Growth coefficient (default 0.2)
  \item \code{t0}: Age at length 0 (default -1)
}

For "logistic":
\itemize{
  \item \code{l50}: Length at 50% probability of maximum age (default 30)
  \item \code{l95}: Length at 95% probability of maximum age (default 40)
}
}
\examples{
# Simple linear age-length relationship
alk_linear <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "linear"
)

# Von Bertalanffy growth
alk_vonbert <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "vonbert",
  growth_params = list(linf = 50, k = 0.3, t0 = -0.5)
)

# Check proportions sum to 1 for each length
prop_check <- aggregate(proportion ~ length, data = alk_linear, sum)
all(abs(prop_check$proportion - 1) < 1e-10)

}
