% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.age_composition.R
\name{print.age_composition}
\alias{print.age_composition}
\title{Print Age Composition Results (Sex-Based)}
\usage{
\method{print}{age_composition}(x, show_cvs = TRUE, show_sexes = TRUE, digits = 2, ...)
}
\arguments{
\item{x}{An object of class \code{age_composition} as returned by \code{calculate_age_compositions}.}

\item{show_cvs}{Logical. Whether to display coefficient of variation (CV) columns. Default is TRUE.}

\item{show_sexes}{Logical. Whether to display all sex categories. Default is TRUE.}

\item{digits}{Integer. Number of digits to round counts and proportions. Default is 2.}

\item{...}{Additional arguments (not used).}
}
\value{
Invisibly returns a list of printed data frames for pooled and stratum-specific results. Each data frame contains age composition counts by sex, and optionally CV columns if available.
}
\description{
Prints a summary of age composition results by sex, including pooled and stratum-specific compositions, proportions, and uncertainty estimates (CVs) if available.
}
\details{
The function prints:
- Pooled age composition results by sex (male, female, unsexed, total)
- Stratum-specific age composition results if multiple strata are present
- Summary statistics for total, male, female, and unsexed fish
- CV columns if \code{show_cvs = TRUE} and uncertainty estimates are available
- Confidence interval columns (CI_Lower and CI_Upper) for each sex category when bootstrap results are available
- Weighted mean CVs across age classes (for bootstrap results only)
- Information about sex-specific age-length keys if used

The weighted mean CV is calculated as the composition-weighted average CV across age classes:
Weighted Mean CV = Sum(CV_i * N_i) / Sum(N_i), where CV_i is the coefficient of variation
and N_i is the number of fish for age class i.
}
\examples{
\dontrun{
test_data <- generate_test_data()
lc_result <- calculate_length_compositions(
  fish_data = test_data$fish_data,
  strata_data = test_data$strata_data,
  length_range = c(20, 40),
  bootstraps = 100
)

age_key <- generate_age_length_key(c(20, 40), c(1, 8))
age_result <- calculate_age_compositions(lc_result, age_key)
print(age_result)
}

}
\seealso{
\code{\link{calculate_age_compositions}} for generating age composition results,
\code{\link{plot.age_composition}} for plotting results
}
