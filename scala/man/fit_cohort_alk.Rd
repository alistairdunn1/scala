% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_cohort_alk.R
\name{fit_cohort_alk}
\alias{fit_cohort_alk}
\title{Fit Cohort-Based Age-Length Model using GAM}
\usage{
fit_cohort_alk(
  cohort_data = NULL,
  alk_data = NULL,
  age_offset = 1,
  by_sex = TRUE,
  k_length = -1,
  k_year = -1,
  method = "REML",
  weights = NULL,
  verbose = TRUE
)
}
\arguments{
\item{cohort_data}{Data frame with columns: 'age', 'length', 'year', and optionally 'sex'.
Each row represents one aged fish with known sampling year.}

\item{alk_data}{Alternative name for cohort_data, for compatibility with other functions}

\item{age_offset}{Numeric offset for year class calculation: YC = (Year - Age) - age_offset (default 1)}

\item{by_sex}{Logical, whether to fit sex-specific smooth terms (default TRUE)}

\item{k_length}{Basis dimension for length smooth terms (default -1 for automatic selection)}

\item{k_year}{Basis dimension for year smooth terms (default -1 for automatic selection)}

\item{method}{Smoothing parameter estimation method for mgcv (default "REML")}

\item{weights}{Optional weights for observations (default NULL)}

\item{verbose}{Logical, whether to print model fitting details (default TRUE)}
}
\value{
A list containing:
  \itemize{
    \item \code{model}: The fitted mgcv::gam model object
    \item \code{predict_cohort}: Function(lengths, years, sex) that returns cohort probabilities
    \item \code{predict_age}: Function(lengths, sampling_years, sex) that returns age probabilities
    \item \code{summary}: Model summary including deviance explained and significance tests
    \item \code{by_sex}: Logical indicating whether sex-specific terms were used
    \item \code{cohort_levels}: Vector of cohort levels in the model
    \item \code{sex_levels}: Vector of sex levels (if applicable)
    \item \code{year_range}: Range of years in training data
    \item \code{age_offset}: The age offset used in cohort calculation
  }
}
\description{
Experimental: Fits an ordinal cohort-at-length model using cumulative logit regression
  to estimate year classes (cohorts) from length and sampling year. Cohorts are defined as
  (sampling_year - age) - age_offset. The model can predict cohorts from length-year observations and
  back-calculate ages given sampling year and length.
}
\details{
The function fits an ordinal regression model using the cumulative logit link function
to model cohorts (year classes) as a function of length and year. Cohorts are calculated
as: cohort = (sampling_year - age) - age_offset.

The model structure is:

\strong{Without sex effects:}
\code{cohort ~ s(length) + s(year)}

\strong{With sex effects:}
\code{cohort ~ s(length, by = sex) + s(year, by = sex) + sex}

The model enables two types of predictions:
1. \strong{Cohort prediction}: Given length and year, estimate cohort probabilities
2. \strong{Age back-calculation}: Given length and sampling year, estimate age probabilities
   by converting cohort predictions using: age = sampling_year - cohort - age_offset
}
\examples{
\dontrun{
# Generate cohort data with age, length, year, and sex
set.seed(123)
n <- 500
years <- 2015:2023
cohort_data <- data.frame(
  year = sample(years, n, replace = TRUE),
  age = sample(1:8, n, replace = TRUE),
  sex = sample(c("male", "female"), n, replace = TRUE)
)

# Add length based on age (with growth variation)
cohort_data$length <- with(
  cohort_data,
  20 + age * 4 + ifelse(sex == "female", 2, 0) + rnorm(n, 0, 2)
)

# Fit cohort model
cohort_model <- fit_cohort_alk(cohort_data, by_sex = TRUE, verbose = TRUE)

# Predict cohorts for new length-year combinations
test_lengths <- c(25, 35, 45)
test_years <- c(2020, 2021, 2022)
test_sex <- c("male", "female", "male")

cohort_probs <- cohort_model$predict_cohort(test_lengths, test_years, test_sex)

# Back-calculate ages for length observations from 2023 sampling
length_obs <- c(28, 38, 48)
sampling_year <- rep(2023, 3)
obs_sex <- c("female", "male", "female")

age_probs <- cohort_model$predict_age(length_obs, sampling_year, obs_sex)
print(age_probs)
}

}
\seealso{
\code{\link{fit_ordinal_alk}}, \code{\link{create_alk}}, \code{\link[mgcv]{gam}}
}
