% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_alk.R
\name{create_alk}
\alias{create_alk}
\title{Create Complete Age-Length Key}
\usage{
create_alk(age_length_key, lengths, ages, tail_ages = NULL, verbose = TRUE)
}
\arguments{
\item{age_length_key}{Either a single data frame or named list of sex-specific keys}

\item{lengths}{Vector of all length bins that will be encountered}

\item{ages}{Vector of all age bins}

\item{tail_ages}{Named list specifying length-age pairs for lengths at tails
Format: list(min_lengths = data.frame(length, age), max_lengths = data.frame(length, age))}

\item{verbose}{Logical, whether to print progress messages}
}
\value{
Age-length key object (data.frame for single key, named list for sex-specific keys)
  with interpolation information stored as attributes:
  \itemize{
    \item Standard age-length key format compatible with calculate_age_compositions()
    \item \code{attr(*, "interpolation_info")}: Data frame summarizing interpolation methods used
    \item \code{attr(*, "is_sex_specific")}: Logical indicating if sex-specific keys were used
  }
}
\description{
Creates a complete age-length key that includes all required length and age bins,
with interpolation/extrapolation as needed for missing combinations.
}
\examples{
\dontrun{
# Create a complete age-length key
complete_alk <- create_alk(
  age_length_key = my_age_key,
  lengths = 20:40,
  ages = 1:8,
  tail_ages = list(
    min_lengths = data.frame(length = c(18, 19), age = c(1, 1)),
    max_lengths = data.frame(length = c(41, 42), age = c(8, 8))
  )
)

# Use directly in age composition calculation
age_results <- calculate_age_compositions(
  x = length_compositions,
  age_length_key = complete_alk # Now works directly
)

# Check interpolation information
print(attr(complete_alk, "interpolation_info"))
}

}
