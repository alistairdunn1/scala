% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_ordinal_alk.R
\name{fit_ordinal_alk}
\alias{fit_ordinal_alk}
\title{Fit Ordinal Age-at-Length Model using GAM}
\usage{
fit_ordinal_alk(
  alk_data,
  by_sex = TRUE,
  k = -1,
  method = "REML",
  weights = NULL,
  verbose = TRUE
)
}
\arguments{
\item{alk_data}{Age-length key data frame or list (from create_alk() output) with columns:
'age', 'length', and optionally 'sex'. Each row represents one aged fish.}

\item{by_sex}{Logical, whether to fit sex-specific smooth terms (default TRUE)}

\item{k}{Basis dimension for smooth terms (default -1 for automatic selection)}

\item{method}{Smoothing parameter estimation method for mgcv (default "REML")}

\item{weights}{Optional weights for observations (default NULL)}

\item{verbose}{Logical, whether to print model fitting details (default TRUE)}
}
\value{
A list containing:
  \itemize{
    \item \code{model}: The fitted mgcv::gam model object
    \item \code{predict_function}: Function that takes lengths (and optionally sex) and returns age probabilities
    \item \code{summary}: Model summary including deviance explained and significance tests
    \item \code{by_sex}: Logical indicating whether sex-specific terms were used
    \item \code{age_levels}: Vector of age levels in the model
    \item \code{sex_levels}: Vector of sex levels (if applicable)
  }
}
\description{
Experimental: Fits an ordinal age-at-length model using cumulative logit regression with smooth terms
  for length, optionally by sex. Returns a prediction function that can be used to predict
  age probabilities for given lengths.
}
\details{
The function fits an ordinal regression model using the cumulative logit link function,
which is appropriate for ordered age categories that typically increase with length.
The model structure is:

\strong{Without sex effects:}
\code{age ~ s(length)}

\strong{With sex effects:}
\code{age ~ s(length, by = sex) + sex}

The cumulative logit model estimates the probability that age <= k for each age level k,
which naturally respects the ordinal nature of age data.

The returned prediction function can be used directly with length composition data
to create age-length keys for use in \code{\link{calculate_age_compositions}}.
}
\examples{
\dontrun{
# Generate test age-length data
age_data <- data.frame(
  age = rep(1:8, each = 50),
  length = c(
    rnorm(50, 20, 2), rnorm(50, 25, 2), rnorm(50, 30, 2),
    rnorm(50, 35, 2), rnorm(50, 40, 2), rnorm(50, 45, 2),
    rnorm(50, 50, 2), rnorm(50, 55, 2)
  ),
  sex = rep(c("male", "female"), 200)
)

# Fit ordinal age-length model
ordinal_model <- fit_ordinal_alk(age_data, by_sex = TRUE, verbose = TRUE)

# Use the prediction function
test_lengths <- 20:60
test_sex <- rep(c("male", "female"), each = length(test_lengths))

# Predict age probabilities
age_probs <- ordinal_model$predict_function(test_lengths, test_sex)

# Create age-length key from predictions
alk_predicted <- data.frame(
  length = rep(test_lengths, 2),
  sex = test_sex,
  age_probs
)
}

}
\seealso{
\code{\link{create_alk}}, \code{\link{calculate_age_compositions}}, \code{\link[mgcv]{gam}}
}
