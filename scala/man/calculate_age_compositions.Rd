% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_age_compositions.R
\name{calculate_age_compositions}
\alias{calculate_age_compositions}
\title{Calculate Age Compositions from Length Compositions using Age-Length Keys}
\usage{
calculate_age_compositions(
  x,
  age_length_key,
  age_range = NULL,
  plus_group_age = FALSE,
  minus_group_age = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{x}{A length_composition object from calculate_length_compositions()}

\item{age_length_key}{Either:
\itemize{
  \item A single data frame with columns: length, age, and proportion (applied to all sex categories)
  \item A named list with elements: male, female, unsexed (each a data frame with length, age, proportion)
}
Each length should have proportions summing to 1 across ages.}

\item{age_range}{Numeric vector of min and max ages to include (e.g., c(1, 10))}

\item{plus_group_age}{Logical, combine ages >= max age into a plus group (default FALSE)}

\item{minus_group_age}{Logical, combine ages <= min age into a minus group (default FALSE)}

\item{verbose}{Logical, whether to print progress messages (default TRUE)}
}
\value{
List containing:
  \itemize{
    \item \code{age_composition}: 3D array (age x sex x stratum) of age compositions
    \item \code{age_proportions}: 3D array (age x sex x stratum) of age proportions
    \item \code{pooled_age_composition}: Matrix (age x sex) of pooled age compositions
    \item \code{pooled_age_proportions}: Matrix (age x sex) of pooled age proportions
    \item \code{age_cvs}: 3D array of CVs for age compositions
    \item \code{age_proportions_cvs}: 3D array of CVs for age proportions
    \item \code{pooled_age_cv}: Matrix of pooled age composition CVs
    \item \code{pooled_age_proportions_cv}: Matrix of pooled age proportion CVs
    \item \code{age_ci_lower}: 3D array of 2.5th percentile values for age compositions
    \item \code{age_ci_upper}: 3D array of 97.5th percentile values for age compositions
    \item \code{pooled_age_ci_lower}: Matrix of 2.5th percentile values for pooled compositions
    \item \code{pooled_age_ci_upper}: Matrix of 97.5th percentile values for pooled compositions
    \item \code{age_proportions_ci_lower}: 3D array of 2.5th percentile values for age proportions
    \item \code{age_proportions_ci_upper}: 3D array of 97.5th percentile values for age proportions
    \item \code{pooled_age_proportions_ci_lower}: Matrix of 2.5th percentile values for pooled proportions
    \item \code{pooled_age_proportions_ci_upper}: Matrix of 97.5th percentile values for pooled proportions
    \item \code{ages}: Vector of age bins
    \item \code{strata_names}: Vector of stratum names
    \item \code{n_bootstraps}: Number of bootstrap iterations
    \item \code{plus_group_age}: Plus group setting for ages
    \item \code{minus_group_age}: Minus group setting for ages
    \item \code{has_sex_data}: TRUE (indicates sex-specific analysis)
    \item \code{scaling_type}: Type of scaling applied
    \item \code{age_length_key}: The age-length key(s) used in calculations
    \item \code{sex_specific_keys}: Logical indicating whether sex-specific keys were used
  }
}
\description{
Converts length compositions to age compositions by applying age-length keys.
Propagates uncertainty from bootstrap length composition estimates through
the age-length transformation to provide age composition CVs and confidence intervals.
Supports sex-specific age-length keys for improved biological realism.
}
\details{
The function applies age-length keys to convert length compositions to age compositions.
For each length bin, fish are allocated to ages according to the proportions in the
age-length key. This process is applied to:

1. **Main age compositions**: Direct application to observed length compositions
2. **Bootstrap iterations**: Application to each bootstrap length composition to estimate uncertainty
3. **Confidence intervals**: Empirical 95% CIs from bootstrap distribution
4. **Coefficients of variation**: Bootstrap-based CV estimates

**Age-length key formats:**

*Single key (applied to all sexes):*
- Data frame with columns: length, age, proportion
- Proportions for each length must sum to 1 across ages

*Sex-specific keys:*
- Named list with elements: male, female, unsexed
- Each element is a data frame with columns: length, age, proportion
- Allows for sex-specific growth patterns and maturation
- If unsexed fish are present but no unsexed key provided, male key is used

**Requirements:**
- Should cover all length bins present in the length composition data
- Missing length-age combinations are assumed to have proportion = 0
- Proportions for each length must sum to 1 across ages (within each sex)

**Bootstrap uncertainty propagation:**
Each bootstrap iteration of length compositions is converted to age compositions
using the same age-length key(s), preserving the correlation structure and
providing realistic uncertainty estimates for the age compositions.
}
\examples{
\dontrun{
# Generate test data and calculate length compositions
test_data <- generate_test_data()
lc_result <- calculate_length_compositions(
  fish_data = test_data$fish_data,
  strata_data = test_data$strata_data,
  length_range = c(20, 40),
  lw_params_male = c(a = 0.01, b = 3.0),
  lw_params_female = c(a = 0.01, b = 3.0),
  lw_params_unsexed = c(a = 0.01, b = 3.0),
  bootstraps = 100
)

# Example 1: Single age-length key (applied to all sexes)
age_key <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "vonbert"
)

age_result <- calculate_age_compositions(
  x = lc_result,
  age_length_key = age_key,
  age_range = c(1, 8)
)

# Example 2: Sex-specific age-length keys
# Males mature faster (younger at given length)
male_key <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "vonbert",
  growth_params = list(linf = 35, k = 0.35, t0 = -0.5)
)

# Females grow larger/older
female_key <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "vonbert",
  growth_params = list(linf = 40, k = 0.25, t0 = -0.8)
)

# Unsexed fish use intermediate growth
unsexed_key <- generate_age_length_key(
  length_range = c(20, 40),
  age_range = c(1, 8),
  growth_type = "vonbert",
  growth_params = list(linf = 37, k = 0.30, t0 = -0.6)
)

sex_specific_keys <- list(
  male = male_key,
  female = female_key,
  unsexed = unsexed_key
)

age_result_sex <- calculate_age_compositions(
  x = lc_result,
  age_length_key = sex_specific_keys,
  age_range = c(1, 8)
)

# View and plot results
print(age_result_sex)
plot(age_result_sex)
}

}
\seealso{
\code{\link{calculate_length_compositions}} for generating length composition data,
\code{\link{plot.age_composition}} for plotting age composition results,
\code{\link{generate_age_length_key}} for creating sample age-length keys
}
